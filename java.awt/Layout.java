/*
-	programmer:Mayank
-	./Layout.java
*/
class Layout extends java.awt.Frame
{
	Layout()
	{
		setSize(500,300);

		setLayout(null);

		java.awt.Button b1, b2, b3;

		b1 = new java.awt.Button("BenTen");

		b2 = new java.awt.Button("DaniFantam");

		b3 = new java.awt.Button("NinjaHattori");

		b1.setBounds(0,100,100,100);

		b2.setBounds(200,100,100,100);

		b3.setBounds(400,100,100,100);

		add(b1);

		add(b2);

		add(b3);
	}
	public static void main(String args[])
	{
		new Layout().setVisible(true);
	}
}
/* Compiled from "Component.java"
public abstract class java.awt.Component implements java.awt.image.ImageObserver,java.awt.MenuContainer,java.io.Serializable {
  volatile transient java.awt.peer.ComponentPeer peer;
  transient java.awt.Container parent;
  transient sun.awt.AppContext appContext;
  int x;
  int y;
  int width;
  int height;
  java.awt.Color foreground;
  java.awt.Color background;
  volatile java.awt.Font font;
  java.awt.Font peerFont;
  java.awt.Cursor cursor;
  java.util.Locale locale;
  boolean ignoreRepaint;
  boolean visible;
  boolean enabled;
  java.awt.dnd.DropTarget dropTarget;
  java.util.Vector<java.awt.PopupMenu> popups;
  java.util.Set<java.awt.AWTKeyStroke>[] focusTraversalKeys;
  static final java.lang.Object LOCK;
  java.awt.Dimension minSize;
  boolean minSizeSet;
  java.awt.Dimension prefSize;
  boolean prefSizeSet;
  java.awt.Dimension maxSize;
  boolean maxSizeSet;
  transient java.awt.ComponentOrientation componentOrientation;
  boolean newEventsOnly;
  transient java.awt.event.ComponentListener componentListener;
  transient java.awt.event.FocusListener focusListener;
  transient java.awt.event.HierarchyListener hierarchyListener;
  transient java.awt.event.HierarchyBoundsListener hierarchyBoundsListener;
  transient java.awt.event.KeyListener keyListener;
  transient java.awt.event.MouseListener mouseListener;
  transient java.awt.event.MouseMotionListener mouseMotionListener;
  transient java.awt.event.MouseWheelListener mouseWheelListener;
  transient java.awt.event.InputMethodListener inputMethodListener;
  static final java.lang.String actionListenerK;
  static final java.lang.String adjustmentListenerK;
  static final java.lang.String componentListenerK;
  static final java.lang.String containerListenerK;
  static final java.lang.String focusListenerK;
  static final java.lang.String itemListenerK;
  static final java.lang.String keyListenerK;
  static final java.lang.String mouseListenerK;
  static final java.lang.String mouseMotionListenerK;
  static final java.lang.String mouseWheelListenerK;
  static final java.lang.String textListenerK;
  static final java.lang.String ownedWindowK;
  static final java.lang.String windowListenerK;
  static final java.lang.String inputMethodListenerK;
  static final java.lang.String hierarchyListenerK;
  static final java.lang.String hierarchyBoundsListenerK;
  static final java.lang.String windowStateListenerK;
  static final java.lang.String windowFocusListenerK;
  long eventMask;
  static boolean isInc;
  static int incRate;
  public static final float TOP_ALIGNMENT;
  public static final float CENTER_ALIGNMENT;
  public static final float BOTTOM_ALIGNMENT;
  public static final float LEFT_ALIGNMENT;
  public static final float RIGHT_ALIGNMENT;
  boolean isPacked;
  transient boolean backgroundEraseDisabled;
  transient sun.awt.EventQueueItem[] eventCache;
  protected javax.accessibility.AccessibleContext accessibleContext;
  static final boolean $assertionsDisabled;
  java.lang.Object getObjectLock();
  final java.security.AccessControlContext getAccessControlContext();
  int getBoundsOp();
  void setBoundsOp(int);
  protected java.awt.Component();
  void initializeFocusTraversalKeys();
  java.lang.String constructComponentName();
  public java.lang.String getName();
  public void setName(java.lang.String);
  public java.awt.Container getParent();
  final java.awt.Container getParent_NoClientCode();
  java.awt.Container getContainer();
  public synchronized void setDropTarget(java.awt.dnd.DropTarget);
  public synchronized java.awt.dnd.DropTarget getDropTarget();
  public java.awt.GraphicsConfiguration getGraphicsConfiguration();
  final java.awt.GraphicsConfiguration getGraphicsConfiguration_NoClientCode();
  void setGraphicsConfiguration(java.awt.GraphicsConfiguration);
  final boolean updateGraphicsData(java.awt.GraphicsConfiguration);
  boolean updateChildGraphicsData(java.awt.GraphicsConfiguration);
  void checkGD(java.lang.String);
  public final java.lang.Object getTreeLock();
  final void checkTreeLock();
  public java.awt.Toolkit getToolkit();
  final java.awt.Toolkit getToolkitImpl();
  final sun.awt.ComponentFactory getComponentFactory();
  public boolean isValid();
  public boolean isDisplayable();
  public boolean isVisible();
  final boolean isVisible_NoClientCode();
  boolean isRecursivelyVisible();
  java.awt.Point pointRelativeToComponent(java.awt.Point);
  java.awt.Component findUnderMouseInWindow(java.awt.PointerInfo);
  public java.awt.Point getMousePosition() throws java.awt.HeadlessException;
  boolean isSameOrAncestorOf(java.awt.Component, boolean);
  public boolean isShowing();
  public boolean isEnabled();
  final boolean isEnabledImpl();
  public void setEnabled(boolean);
  public void enable();
  public void enable(boolean);
  public void disable();
  public boolean isDoubleBuffered();
  public void enableInputMethods(boolean);
  public void setVisible(boolean);
  public void show();
  public void show(boolean);
  boolean containsFocus();
  void clearMostRecentFocusOwnerOnHide();
  void clearCurrentFocusCycleRootOnHide();
  public void hide();
  public java.awt.Color getForeground();
  public void setForeground(java.awt.Color);
  public boolean isForegroundSet();
  public java.awt.Color getBackground();
  public void setBackground(java.awt.Color);
  public boolean isBackgroundSet();
  public java.awt.Font getFont();
  final java.awt.Font getFont_NoClientCode();
  public void setFont(java.awt.Font);
  public boolean isFontSet();
  public java.util.Locale getLocale();
  public void setLocale(java.util.Locale);
  public java.awt.image.ColorModel getColorModel();
  public java.awt.Point getLocation();
  public java.awt.Point getLocationOnScreen();
  final java.awt.Point getLocationOnScreen_NoTreeLock();
  public java.awt.Point location();
  public void setLocation(int, int);
  public void move(int, int);
  public void setLocation(java.awt.Point);
  public java.awt.Dimension getSize();
  public java.awt.Dimension size();
  public void setSize(int, int);
  public void resize(int, int);
  public void setSize(java.awt.Dimension);
  public void resize(java.awt.Dimension);
  public java.awt.Rectangle getBounds();
  public java.awt.Rectangle bounds();
  public void setBounds(int, int, int, int);
  public void reshape(int, int, int, int);
  public void setBounds(java.awt.Rectangle);
  public int getX();
  public int getY();
  public int getWidth();
  public int getHeight();
  public java.awt.Rectangle getBounds(java.awt.Rectangle);
  public java.awt.Dimension getSize(java.awt.Dimension);
  public java.awt.Point getLocation(java.awt.Point);
  public boolean isOpaque();
  public boolean isLightweight();
  public void setPreferredSize(java.awt.Dimension);
  public boolean isPreferredSizeSet();
  public java.awt.Dimension getPreferredSize();
  public java.awt.Dimension preferredSize();
  public void setMinimumSize(java.awt.Dimension);
  public boolean isMinimumSizeSet();
  public java.awt.Dimension getMinimumSize();
  public java.awt.Dimension minimumSize();
  public void setMaximumSize(java.awt.Dimension);
  public boolean isMaximumSizeSet();
  public java.awt.Dimension getMaximumSize();
  public float getAlignmentX();
  public float getAlignmentY();
  public int getBaseline(int, int);
  public java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior();
  public void doLayout();
  public void layout();
  public void validate();
  public void invalidate();
  void invalidateParent();
  final void invalidateIfValid();
  public void revalidate();
  final void revalidateSynchronously();
  public java.awt.Graphics getGraphics();
  final java.awt.Graphics getGraphics_NoClientCode();
  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public void setCursor(java.awt.Cursor);
  final void updateCursorImmediately();
  public java.awt.Cursor getCursor();
  final java.awt.Cursor getCursor_NoClientCode();
  public boolean isCursorSet();
  public void paint(java.awt.Graphics);
  public void update(java.awt.Graphics);
  public void paintAll(java.awt.Graphics);
  void lightweightPaint(java.awt.Graphics);
  void paintHeavyweightComponents(java.awt.Graphics);
  public void repaint();
  public void repaint(long);
  public void repaint(int, int, int, int);
  public void repaint(long, int, int, int, int);
  public void print(java.awt.Graphics);
  public void printAll(java.awt.Graphics);
  void lightweightPrint(java.awt.Graphics);
  void printHeavyweightComponents(java.awt.Graphics);
  public boolean imageUpdate(java.awt.Image, int, int, int, int, int);
  public java.awt.Image createImage(java.awt.image.ImageProducer);
  public java.awt.Image createImage(int, int);
  public java.awt.image.VolatileImage createVolatileImage(int, int);
  public java.awt.image.VolatileImage createVolatileImage(int, int, java.awt.ImageCapabilities) throws java.awt.AWTException;
  public boolean prepareImage(java.awt.Image, java.awt.image.ImageObserver);
  public boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public int checkImage(java.awt.Image, java.awt.image.ImageObserver);
  public int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  void createBufferStrategy(int);
  void createBufferStrategy(int, java.awt.BufferCapabilities) throws java.awt.AWTException;
  java.awt.image.BufferStrategy getBufferStrategy();
  java.awt.Image getBackBuffer();
  public void setIgnoreRepaint(boolean);
  public boolean getIgnoreRepaint();
  public boolean contains(int, int);
  public boolean inside(int, int);
  public boolean contains(java.awt.Point);
  public java.awt.Component getComponentAt(int, int);
  public java.awt.Component locate(int, int);
  public java.awt.Component getComponentAt(java.awt.Point);
  public void deliverEvent(java.awt.Event);
  public final void dispatchEvent(java.awt.AWTEvent);
  void dispatchEventImpl(java.awt.AWTEvent);
  void autoProcessMouseWheel(java.awt.event.MouseWheelEvent);
  boolean dispatchMouseWheelToAncestor(java.awt.event.MouseWheelEvent);
  boolean areInputMethodsEnabled();
  boolean eventEnabled(java.awt.AWTEvent);
  boolean eventTypeEnabled(int);
  public boolean postEvent(java.awt.Event);
  public synchronized void addComponentListener(java.awt.event.ComponentListener);
  public synchronized void removeComponentListener(java.awt.event.ComponentListener);
  public synchronized java.awt.event.ComponentListener[] getComponentListeners();
  public synchronized void addFocusListener(java.awt.event.FocusListener);
  public synchronized void removeFocusListener(java.awt.event.FocusListener);
  public synchronized java.awt.event.FocusListener[] getFocusListeners();
  public void addHierarchyListener(java.awt.event.HierarchyListener);
  public void removeHierarchyListener(java.awt.event.HierarchyListener);
  public synchronized java.awt.event.HierarchyListener[] getHierarchyListeners();
  public void addHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener);
  public void removeHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener);
  int numListening(long);
  int countHierarchyMembers();
  int createHierarchyEvents(int, java.awt.Component, java.awt.Container, long, boolean);
  public synchronized java.awt.event.HierarchyBoundsListener[] getHierarchyBoundsListeners();
  void adjustListeningChildrenOnParent(long, int);
  public synchronized void addKeyListener(java.awt.event.KeyListener);
  public synchronized void removeKeyListener(java.awt.event.KeyListener);
  public synchronized java.awt.event.KeyListener[] getKeyListeners();
  public synchronized void addMouseListener(java.awt.event.MouseListener);
  public synchronized void removeMouseListener(java.awt.event.MouseListener);
  public synchronized java.awt.event.MouseListener[] getMouseListeners();
  public synchronized void addMouseMotionListener(java.awt.event.MouseMotionListener);
  public synchronized void removeMouseMotionListener(java.awt.event.MouseMotionListener);
  public synchronized java.awt.event.MouseMotionListener[] getMouseMotionListeners();
  public synchronized void addMouseWheelListener(java.awt.event.MouseWheelListener);
  public synchronized void removeMouseWheelListener(java.awt.event.MouseWheelListener);
  public synchronized java.awt.event.MouseWheelListener[] getMouseWheelListeners();
  public synchronized void addInputMethodListener(java.awt.event.InputMethodListener);
  public synchronized void removeInputMethodListener(java.awt.event.InputMethodListener);
  public synchronized java.awt.event.InputMethodListener[] getInputMethodListeners();
  public <T extends java.util.EventListener> T[] getListeners(java.lang.Class<T>);
  public java.awt.im.InputMethodRequests getInputMethodRequests();
  public java.awt.im.InputContext getInputContext();
  protected final void enableEvents(long);
  protected final void disableEvents(long);
  final boolean isCoalescingEnabled();
  protected java.awt.AWTEvent coalesceEvents(java.awt.AWTEvent, java.awt.AWTEvent);
  protected void processEvent(java.awt.AWTEvent);
  protected void processComponentEvent(java.awt.event.ComponentEvent);
  protected void processFocusEvent(java.awt.event.FocusEvent);
  protected void processKeyEvent(java.awt.event.KeyEvent);
  protected void processMouseEvent(java.awt.event.MouseEvent);
  protected void processMouseMotionEvent(java.awt.event.MouseEvent);
  protected void processMouseWheelEvent(java.awt.event.MouseWheelEvent);
  boolean postsOldMouseEvents();
  protected void processInputMethodEvent(java.awt.event.InputMethodEvent);
  protected void processHierarchyEvent(java.awt.event.HierarchyEvent);
  protected void processHierarchyBoundsEvent(java.awt.event.HierarchyEvent);
  public boolean handleEvent(java.awt.Event);
  public boolean mouseDown(java.awt.Event, int, int);
  public boolean mouseDrag(java.awt.Event, int, int);
  public boolean mouseUp(java.awt.Event, int, int);
  public boolean mouseMove(java.awt.Event, int, int);
  public boolean mouseEnter(java.awt.Event, int, int);
  public boolean mouseExit(java.awt.Event, int, int);
  public boolean keyDown(java.awt.Event, int);
  public boolean keyUp(java.awt.Event, int);
  public boolean action(java.awt.Event, java.lang.Object);
  public void addNotify();
  public void removeNotify();
  public boolean gotFocus(java.awt.Event, java.lang.Object);
  public boolean lostFocus(java.awt.Event, java.lang.Object);
  public boolean isFocusTraversable();
  public boolean isFocusable();
  public void setFocusable(boolean);
  final boolean isFocusTraversableOverridden();
  public void setFocusTraversalKeys(int, java.util.Set<? extends java.awt.AWTKeyStroke>);
  public java.util.Set<java.awt.AWTKeyStroke> getFocusTraversalKeys(int);
  final void setFocusTraversalKeys_NoIDCheck(int, java.util.Set<? extends java.awt.AWTKeyStroke>);
  final java.util.Set<java.awt.AWTKeyStroke> getFocusTraversalKeys_NoIDCheck(int);
  public boolean areFocusTraversalKeysSet(int);
  public void setFocusTraversalKeysEnabled(boolean);
  public boolean getFocusTraversalKeysEnabled();
  public void requestFocus();
  public void requestFocus(java.awt.event.FocusEvent$Cause);
  protected boolean requestFocus(boolean);
  protected boolean requestFocus(boolean, java.awt.event.FocusEvent$Cause);
  public boolean requestFocusInWindow();
  public boolean requestFocusInWindow(java.awt.event.FocusEvent$Cause);
  protected boolean requestFocusInWindow(boolean);
  boolean requestFocusInWindow(boolean, java.awt.event.FocusEvent$Cause);
  final boolean requestFocusHelper(boolean, boolean);
  final boolean requestFocusHelper(boolean, boolean, java.awt.event.FocusEvent$Cause);
  static synchronized void setRequestFocusController(sun.awt.RequestFocusController);
  public java.awt.Container getFocusCycleRootAncestor();
  public boolean isFocusCycleRoot(java.awt.Container);
  java.awt.Container getTraversalRoot();
  public void transferFocus();
  public void nextFocus();
  boolean transferFocus(boolean);
  final java.awt.Component getNextFocusCandidate();
  public void transferFocusBackward();
  boolean transferFocusBackward(boolean);
  public void transferFocusUpCycle();
  public boolean hasFocus();
  public boolean isFocusOwner();
  void setAutoFocusTransferOnDisposal(boolean);
  boolean isAutoFocusTransferOnDisposal();
  public void add(java.awt.PopupMenu);
  public void remove(java.awt.MenuComponent);
  protected java.lang.String paramString();
  public java.lang.String toString();
  public void list();
  public void list(java.io.PrintStream);
  public void list(java.io.PrintStream, int);
  public void list(java.io.PrintWriter);
  public void list(java.io.PrintWriter, int);
  final java.awt.Container getNativeContainer();
  public void addPropertyChangeListener(java.beans.PropertyChangeListener);
  public void removePropertyChangeListener(java.beans.PropertyChangeListener);
  public java.beans.PropertyChangeListener[] getPropertyChangeListeners();
  public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String);
  protected void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object);
  protected void firePropertyChange(java.lang.String, boolean, boolean);
  protected void firePropertyChange(java.lang.String, int, int);
  public void firePropertyChange(java.lang.String, byte, byte);
  public void firePropertyChange(java.lang.String, char, char);
  public void firePropertyChange(java.lang.String, short, short);
  public void firePropertyChange(java.lang.String, long, long);
  public void firePropertyChange(java.lang.String, float, float);
  public void firePropertyChange(java.lang.String, double, double);
  public void setComponentOrientation(java.awt.ComponentOrientation);
  public java.awt.ComponentOrientation getComponentOrientation();
  public void applyComponentOrientation(java.awt.ComponentOrientation);
  final boolean canBeFocusOwner();
  final boolean canBeFocusOwnerRecursively();
  final void relocateComponent();
  java.awt.Window getContainingWindow();
  public javax.accessibility.AccessibleContext getAccessibleContext();
  int getAccessibleIndexInParent();
  javax.accessibility.AccessibleStateSet getAccessibleStateSet();
  static boolean isInstanceOf(java.lang.Object, java.lang.String);
  final boolean areBoundsValid();
  void applyCompoundShape(sun.java2d.pipe.Region);
  java.awt.Point getLocationOnWindow();
  final sun.java2d.pipe.Region getNormalShape();
  sun.java2d.pipe.Region getOpaqueShape();
  final int getSiblingIndexAbove();
  final java.awt.peer.ComponentPeer getHWPeerAboveMe();
  final int getSiblingIndexBelow();
  final boolean isNonOpaqueForMixing();
  void applyCurrentShape();
  final void subtractAndApplyShape(sun.java2d.pipe.Region);
  final void subtractAndApplyShapeBelowMe();
  void mixOnShowing();
  void mixOnHiding(boolean);
  void mixOnReshaping();
  void mixOnZOrderChanging(int, int);
  void mixOnValidating();
  final boolean isMixingNeeded();
  public void setMixingCutoutShape(java.awt.Shape);
  void updateZOrder();
  static {};
}
*/
